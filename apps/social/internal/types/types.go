// Code generated by goctl. DO NOT EDIT.
package types

type AddFriendReq struct {
	UID       string `json:"uid"`
	FriendUID string `json:"friend_uid"`
}

type AddFriendResp struct {
}

type BlockFriendReq struct {
	UID       string `json:"uid"`
	FriendUID string `json:"friend_uid"`
}

type BlockFriendResp struct {
}

type ChangeUserInfoReq struct {
	User struct {
		UID      string `json:"uid"`
		Avatar   string `json:"avatar"`
		Username string `json:"username"`
		Email    string `json:"email"`
		Age      uint   `json:"age"`
		Sign     string `json:"sign"`
		Gender   bool   `json:"gender"`
	} `json:"user"`
}

type ChangeUserInfoResp struct {
	User struct {
		UID      string `json:"uid"`
		Avatar   string `json:"avatar"`
		Username string `json:"username"`
		Email    string `json:"email"`
		Age      uint   `json:"age"`
		Sign     string `json:"sign"`
		Gender   bool   `json:"gender"`
	} `json:"user"`
}

type CreateGroupReq struct {
	UserUid string `json:"user_uid"`
	Name    string `json:"name"`
	Avatar  string `json:"avatar"`
}

type CreateGroupResp struct {
	Uid    string `json:"uid"`
	Name   string `json:"name"`
	Avatar string `json:"avatar"`
}

type DeleteFriendReq struct {
	UID       string `json:"uid"`
	FriendUID string `json:"friend_uid"`
}

type DeleteFriendResp struct {
}

type DeleteGroupMemberReq struct {
	UserUid   string `json:"user_uid"`
	GroupUid  string `json:"group_uid"`
	MemberUid string `json:"member_uid"`
}

type DeleteGroupMemberResp struct {
}

type DeleteGroupReq struct {
	UserUid  string `json:"user_uid"`
	GroupUid string `json:"group_uid"`
}

type DeleteGroupResp struct {
}

type DismissGroupReq struct {
	UserUid  string `json:"user_uid"`
	GroupUid string `json:"group_uid"`
}

type DismissGroupResp struct {
}

type GetGroupMemberListReq struct {
	GroupUid string `path:"group_id"`
}

type GetGroupMemberListResp struct {
	Members []User `json:"members"`
}

type GetHistoryGroupChatReq struct {
	UserUID  string `json:"user_uid"`
	GroupUID string `json:"group_uid"`
	Marker   string `json:"marker"`
}

type GetHistoryGroupChatResp struct {
	Messages []Message `json:"messages"`
}

type GetHistoryPrivateChatReq struct {
	UserUID   string `json:"user_uid"`
	FriendUID string `json:"friend_uid"`
	Marker    string `json:"marker"`
}

type GetHistoryPrivateChatResp struct {
	Messages []Message `json:"messages"`
}

type LoginReq struct {
	UID      string `json:"uid"`
	Password string `json:"password"`
}

type LoginResp struct {
	User struct {
		UID      string `json:"uid"`
		Avatar   string `json:"avatar"`
		Username string `json:"username"`
		Email    string `json:"email"`
		Age      uint   `json:"age"`
		Sign     string `json:"sign"`
		Gender   bool   `json:"gender"`
	} `json:"user"`
	Token   string `json:"token"`
	Message string `json:"message"`
}

type Message struct {
	ID          uint   `json:"id"`
	Type        uint8  `json:"type"`      // 消息类型
	ContentType uint8  `json:"type"`      // 内容类型
	From        string `json:"from"`      // 发送者UID
	To          string `json:"to"`        // 接收者UID/群聊UID
	SendTime    uint64 `json:"send_time"` // 消息发送时间戳
	Content     []byte `json:"content"`   //  消息内容
}

type RegisterReq struct {
	Username string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

type RegisterResp struct {
	User struct {
		UID      string `json:"uid"`
		Avatar   string `json:"avatar"`
		Username string `json:"username"`
		Email    string `json:"email"`
		Age      uint   `json:"age"`
		Sign     string `json:"sign"`
		Gender   bool   `json:"gender"`
	} `json:"user"`
	Password string `json:"password"`
	Message  string `json:"message"`
}

type SearchUserReq struct {
	Search string `path:"search"`
}

type SearchUserResp struct {
	Users []User `json:"users"`
}

type UpdateFriendGroupReq struct {
	UID            string `json:"uid"`
	FriendUID      string `json:"friend_uid"`
	FriendGroupUid string `json:"friend_group_uid"`
}

type UpdateFriendGroupResp struct {
}

type User struct {
	UID      string `json:"uid"`
	Avatar   string `json:"avatar"`
	Username string `json:"username"`
	Email    string `json:"email"`
	Age      uint   `json:"age"`
	Sign     string `json:"sign"`
	Gender   bool   `json:"gender"`
}
