// Code generated by goctl. DO NOT EDIT.
// Source: social.proto

package socialclient

import (
	"context"

	"github.com/YShiJia/IM/apps/social/rpc/social"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeleteFriendReq  = social.DeleteFriendReq
	DeleteFriendResp = social.DeleteFriendResp
	JoinGroupReq     = social.JoinGroupReq
	JoinGroupResp    = social.JoinGroupResp
	MakeFriendReq    = social.MakeFriendReq
	MakeFriendResp   = social.MakeFriendResp
	QuitGroupReq     = social.QuitGroupReq
	QuitGroupResp    = social.QuitGroupResp
	UserEntity       = social.UserEntity

	Social interface {
		MakeFriend(ctx context.Context, in *MakeFriendReq, opts ...grpc.CallOption) (*MakeFriendResp, error)
		DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error)
		JoinGroup(ctx context.Context, in *JoinGroupReq, opts ...grpc.CallOption) (*JoinGroupResp, error)
		QuitGroup(ctx context.Context, in *QuitGroupReq, opts ...grpc.CallOption) (*QuitGroupResp, error)
	}

	defaultSocial struct {
		cli zrpc.Client
	}
)

func NewSocial(cli zrpc.Client) Social {
	return &defaultSocial{
		cli: cli,
	}
}

func (m *defaultSocial) MakeFriend(ctx context.Context, in *MakeFriendReq, opts ...grpc.CallOption) (*MakeFriendResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.MakeFriend(ctx, in, opts...)
}

func (m *defaultSocial) DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.DeleteFriend(ctx, in, opts...)
}

func (m *defaultSocial) JoinGroup(ctx context.Context, in *JoinGroupReq, opts ...grpc.CallOption) (*JoinGroupResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.JoinGroup(ctx, in, opts...)
}

func (m *defaultSocial) QuitGroup(ctx context.Context, in *QuitGroupReq, opts ...grpc.CallOption) (*QuitGroupResp, error) {
	client := social.NewSocialClient(m.cli.Conn())
	return client.QuitGroup(ctx, in, opts...)
}
