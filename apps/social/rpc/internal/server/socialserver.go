// Code generated by goctl. DO NOT EDIT.
// Source: social.proto

package server

import (
	"context"

	"github.com/YShiJia/IM/apps/social/rpc/internal/logic"
	"github.com/YShiJia/IM/apps/social/rpc/internal/svc"
	"github.com/YShiJia/IM/apps/social/rpc/social"
)

type SocialServer struct {
	svcCtx *svc.ServiceContext
	social.UnimplementedSocialServer
}

func NewSocialServer(svcCtx *svc.ServiceContext) *SocialServer {
	return &SocialServer{
		svcCtx: svcCtx,
	}
}

func (s *SocialServer) MakeFriend(ctx context.Context, in *social.MakeFriendReq) (*social.MakeFriendResp, error) {
	l := logic.NewMakeFriendLogic(ctx, s.svcCtx)
	return l.MakeFriend(in)
}

func (s *SocialServer) DeleteFriend(ctx context.Context, in *social.DeleteFriendReq) (*social.DeleteFriendResp, error) {
	l := logic.NewDeleteFriendLogic(ctx, s.svcCtx)
	return l.DeleteFriend(in)
}

func (s *SocialServer) JoinGroup(ctx context.Context, in *social.JoinGroupReq) (*social.JoinGroupResp, error) {
	l := logic.NewJoinGroupLogic(ctx, s.svcCtx)
	return l.JoinGroup(in)
}

func (s *SocialServer) QuitGroup(ctx context.Context, in *social.QuitGroupReq) (*social.QuitGroupResp, error) {
	l := logic.NewQuitGroupLogic(ctx, s.svcCtx)
	return l.QuitGroup(in)
}
