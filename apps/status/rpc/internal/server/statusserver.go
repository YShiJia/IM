// Code generated by goctl. DO NOT EDIT.
// Source: status.proto

package server

import (
	"context"

	"github.com/YShiJia/IM/apps/status/rpc/internal/logic"
	"github.com/YShiJia/IM/apps/status/rpc/internal/svc"
	"github.com/YShiJia/IM/apps/status/rpc/statusmodel"
)

type StatusServer struct {
	svcCtx *svc.ServiceContext
	statusmodel.UnimplementedStatusServer
}

func NewStatusServer(svcCtx *svc.ServiceContext) *StatusServer {
	return &StatusServer{
		svcCtx: svcCtx,
	}
}

func (s *StatusServer) Ping(ctx context.Context, in *statusmodel.Request) (*statusmodel.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *StatusServer) UserOnline(ctx context.Context, in *statusmodel.UserOnlineRequest) (*statusmodel.UserOnlineResponse, error) {
	l := logic.NewUserOnlineLogic(ctx, s.svcCtx)
	return l.UserOnline(in)
}

func (s *StatusServer) ClientConnAddress(ctx context.Context, in *statusmodel.ClientConnAddressRequest) (*statusmodel.ClientConnAddressResponse, error) {
	l := logic.NewClientConnAddressLogic(ctx, s.svcCtx)
	return l.ClientConnAddress(in)
}

func (s *StatusServer) ClientMsgSync(ctx context.Context, in *statusmodel.ClientMsgSyncRequest) (*statusmodel.ClientMsgSyncResponse, error) {
	l := logic.NewClientMsgSyncLogic(ctx, s.svcCtx)
	return l.ClientMsgSync(in)
}
